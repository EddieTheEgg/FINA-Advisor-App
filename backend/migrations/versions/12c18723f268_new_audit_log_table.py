"""New audit log table

Revision ID: 12c18723f268
Revises: 6fa500dbc6e7
Create Date: 2025-07-25 21:25:00.098982

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '12c18723f268'
down_revision: Union[str, None] = '6fa500dbc6e7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create the audit_logs table
    op.create_table('audit_logs',
        sa.Column('audit_id', sa.UUID(), nullable=False),
        sa.Column('user_id', sa.UUID(), nullable=True),
        sa.Column('action', sa.Enum('UPDATE', 'DELETE', name='audit_action'), nullable=False),
        sa.Column('record_id', sa.UUID(), nullable=False),
        sa.Column('old_data', sa.JSON(), nullable=True),
        sa.Column('new_data', sa.JSON(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
        sa.PrimaryKeyConstraint('audit_id')
    )
    
    # Create index on user_id for performance
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop index first
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    
    # Drop the audit_logs table
    op.drop_table('audit_logs')
    
    # Drop the enum type only if no other tables are using it
    connection = op.get_bind()
    
    # Check if any other tables are using the audit_action enum
    result = connection.execute(sa.text("""
        SELECT 1 FROM information_schema.columns 
        WHERE udt_name = 'audit_action' 
        AND table_name != 'audit_logs'
    """)).fetchone()
    
    # Only drop the enum if no other tables are using it
    if not result:
        audit_action_enum = sa.Enum(name='audit_action')
        audit_action_enum.drop(connection)
    # ### end Alembic commands ###
